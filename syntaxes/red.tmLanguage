<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>red</string>
		<string>reds</string>
	</array>
	<key>firstLineMatch</key>
	<string>^#!/.*\bRed\b</string>
	<key>foldingStartMarker</key>
	<string>(?x)       # turn on extended mode
  ^        # a line beginning with
  \s*      # some optional space
  [{\[]    # the start of an object or array
  (?!      # but not followed by
    .*     # whatever
    [}\]]  # and the close of an object or array
    ,?     # an optional comma
    \s*    # some optional space
    $      # at the end of the line
  )
  |        # ...or...
  [{\[]    # the start of an object or array
  \s*      # some optional space
  $        # at the end of the line</string>
	<key>foldingStopMarker</key>
	<string>(?x)     # turn on extended mode
  ^      # a line beginning with
  \s*    # some optional space
  [}\]]  # and the close of an object or array</string>
	<string>^~R</string>
	<key>name</key>
	<string>Red</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#type-literal</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#logic</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#strings</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#values</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#words</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#errors</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>binary-base-sixteen</key>
		<dict>
			<key>begin</key>
			<string>(16)?#\{</string>
			<key>end</key>
			<string>\}</string>
			<key>name</key>
			<string>string.other.base16.red</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>[0-9a-fA-F]*</string>
					<key>name</key>
					<string>constant.character.binary.red</string>
				</dict>
			</array>
		</dict>
		<key>binary-base-sixtyfour</key>
		<dict>
			<key>begin</key>
			<string>64#\{</string>
			<key>end</key>
			<string>\}</string>
			<key>name</key>
			<string>string.other.base64.red</string>
		</dict>
		<key>binary-base-two</key>
		<dict>
			<key>begin</key>
			<string>2#\{</string>
			<key>end</key>
			<string>\}</string>
			<key>name</key>
			<string>string.other.base2.red</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>[01]*</string>
					<key>name</key>
					<string>constant.character.binary.red</string>
				</dict>
			</array>
		</dict>
		<key>block-blocks</key>
		<dict>
			<key>begin</key>
			<string>(\[)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.embedded.begin.red</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\])</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.embedded.end.red</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.group.block.red</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>block-parens</key>
		<dict>
			<key>begin</key>
			<string>\(</string>
			<key>end</key>
			<string>\)</string>
			<key>name</key>
			<string>meta.group.paren.red</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>blocks</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#block-blocks</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block-parens</string>
				</dict>
			</array>
		</dict>
		<key>character</key>
		<dict>
			<key>match</key>
			<string>#"(\^(\(([0-9a-fA-F]{2,4}|[a-zA-Z]{3,6})\)|.)|[^\^\"])"</string>
			<key>name</key>
			<string>constant.other.character.red</string>
		</dict>
		<key>character-html</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.entity.html</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.entity.html</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(&amp;)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)</string>
			<key>name</key>
			<string>constant.character.entity.html</string>
		</dict>
		<key>character-inline</key>
		<dict>
			<key>match</key>
			<string>\^(\([0-9a-fA-F]{2,4}\)|.)</string>
			<key>name</key>
			<string>constant.character.red</string>
		</dict>
		<key>comment-line</key>
		<dict>
			<key>match</key>
			<string>;([^%\n]|%(?!&gt;))*</string>
			<key>name</key>
			<string>comment.line.semicolon.red</string>
		</dict>
		<key>comment-multiline-block</key>
		<dict>
			<key>begin</key>
			<string>comment\s*\[</string>
			<key>end</key>
			<string>\]</string>
			<key>name</key>
			<string>comment.block.red</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment-multiline-block-nested</string>
				</dict>
			</array>
		</dict>
		<key>comment-multiline-block-nested</key>
		<dict>
			<key>begin</key>
			<string>\[</string>
			<key>end</key>
			<string>\]</string>
			<key>name</key>
			<string>comment.block.red</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment-multiline-block-nested</string>
				</dict>
			</array>
		</dict>
		<key>comment-multiline-string</key>
		<dict>
			<key>begin</key>
			<string>comment\s*\{</string>
			<key>end</key>
			<string>\}</string>
			<key>name</key>
			<string>comment.block.red</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment-multiline-string-nested</string>
				</dict>
			</array>
		</dict>
		<key>comment-multiline-string-nested</key>
		<dict>
			<key>begin</key>
			<string>\{</string>
			<key>end</key>
			<string>\}</string>
			<key>name</key>
			<string>comment.block.red</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment-multiline-string-nested</string>
				</dict>
			</array>
		</dict>
		<key>comment-tag</key>
		<dict>
			<key>begin</key>
			<string>(?&lt;=^|[\s\[\]()}"])&lt;!--</string>
			<key>end</key>
			<string>--&gt;</string>
			<key>name</key>
			<string>comment.block.tag.red</string>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment-shebang</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment-line</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment-multiline-string</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment-multiline-block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment-tag</string>
				</dict>
			</array>
		</dict>
		<key>comments-shebang</key>
		<dict>
			<key>match</key>
			<string>^#!/.*red.*</string>
			<key>name</key>
			<string>comment.line.shebang.red</string>
		</dict>
		<key>error-commas</key>
		<dict>
			<key>match</key>
			<string>,</string>
			<key>name</key>
			<string>invalid.illegal.comma.red</string>
		</dict>
		<key>errors</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#error-commas</string>
				</dict>
			</array>
		</dict>
		<key>logic</key>
		<dict>
			<key>match</key>
			<string>#\[(true|false|none)]</string>
			<key>name</key>
			<string>constant.language.logic.red</string>
		</dict>
		<key>string-email</key>
		<dict>
			<key>match</key>
			<string>[^\s\n:/\[\]\(\)]+@[^\s\n:/\[\]\(\)]+</string>
			<key>name</key>
			<string>string.email.red</string>
		</dict>
		<key>string-file</key>
		<dict>
			<key>match</key>
			<string>%[^\s\n\[\]\(\)]*</string>
			<key>name</key>
			<string>string.other.file.red</string>
		</dict>
		<key>string-file-quoted</key>
		<dict>
			<key>begin</key>
			<string>%"</string>
			<key>end</key>
			<string>"</string>
			<key>name</key>
			<string>string.other.file.red</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>%[A-Fa-f0-9]{2}</string>
					<key>name</key>
					<string>constant.character.hex.red</string>
				</dict>
			</array>
		</dict>
		<key>string-issue</key>
		<dict>
			<key>match</key>
			<string>#[^\s\n\[\]\(\)]*</string>
			<key>name</key>
			<string>string.other.issue.red</string>
		</dict>
		<key>string-multiline</key>
		<dict>
			<key>begin</key>
			<string>\{</string>
			<key>end</key>
			<string>\}</string>
			<key>name</key>
			<string>string.other.red</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string-rsp-tag</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#character-inline</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#character-html</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-nested-multiline</string>
				</dict>
			</array>
		</dict>
		<key>string-nested-multiline</key>
		<dict>
			<key>begin</key>
			<string>\{</string>
			<key>end</key>
			<string>\}</string>
			<key>name</key>
			<string>string.other.red</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string-nested-multiline</string>
				</dict>
			</array>
		</dict>
		<key>string-quoted</key>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>end</key>
			<string>"</string>
			<key>name</key>
			<string>string.quoted.red</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string-rsp-tag</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#character-inline</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#character-html</string>
				</dict>
			</array>
		</dict>
		<key>string-rsp-tag</key>
		<dict>
			<key>begin</key>
			<string>&lt;%(==?|:|!)? </string>
			<key>end</key>
			<string> %&gt;</string>
			<key>name</key>
			<string>source.red.embedded.block.html</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.red</string>
				</dict>
			</array>
		</dict>
		<key>string-tag</key>
		<dict>
			<key>begin</key>
			<string>&lt;(?:\/|%={0,2}\ |\!)?(?:([-_a-zA-Z0-9]+):)?([-_a-zA-Z0-9:]+)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.namespace.xml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.xml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?:\s/|\ %)?&gt;</string>
			<key>name</key>
			<string>meta.tag.red</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.other.namespace.xml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.other.attribute-name.xml</string>
						</dict>
					</dict>
					<key>match</key>
					<string> (?:([-_a-zA-Z0-9]+):)?([_a-zA-Z-]+)</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-tag-double-quoted</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-tag-single-quoted</string>
				</dict>
			</array>
		</dict>
		<key>string-tag-double-quoted</key>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>end</key>
			<string>"</string>
			<key>name</key>
			<string>string.quoted.double.xml</string>
		</dict>
		<key>string-tag-single-quoted</key>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>end</key>
			<string>'</string>
			<key>name</key>
			<string>string.quoted.single.xml</string>
		</dict>
		<key>string-url</key>
		<dict>
			<key>match</key>
			<string>[A-Za-z][\w-]{1,15}:(/{0,3}[^\s\n\[\]\(\)]+|//)</string>
			<key>name</key>
			<string>string.other.url.red</string>
		</dict>
		<key>strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#character</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-quoted</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-multiline</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-tag</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-file-quoted</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-file</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-url</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-email</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#binary-base-two</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#binary-base-sixty-four</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#binary-base-sixteen</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-issue</string>
				</dict>
			</array>
		</dict>
		<key>type-literal</key>
		<dict>
			<key>begin</key>
			<string>#\[(?:(\w+!))</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.datatype.red</string>
				</dict>
			</dict>
			<key>end</key>
			<string>]</string>
			<key>name</key>
			<string>meta.literal.red</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>value-date</key>
		<dict>
			<key>match</key>
			<string>\d{1,4}\-(Jan(u(a(ry?)?)?)?|Feb(u(a(ry?)?)?)?|Mar(ch?)?|Apr(il?)?|May|June?|July?|Aug(u(st?)?)?|Sep(t(e(m(b(er?)?)?)?)?)?|Oct(o(b(er?)?)?)?|Nov(e(m(b(er?)?)?)?)?|Dec(e(m(b(er?)?)?)?)?|[1-9]|1[012])\-\d{1,4}(/\d{1,2}[:]\d{1,2}([:]\d{1,2}(\.\d{1,5})?)?([+-]\d{1,2}[:]\d{1,2})?)?</string>
			<key>name</key>
			<string>constant.other.date.red</string>
		</dict>
		<key>value-money</key>
		<dict>
			<key>match</key>
			<string>(?&lt;!\w)-?[a-zA-Z]*\$[0-9]+(\.[0-9]{2})?</string>
			<key>name</key>
			<string>constant.numeric.money.red</string>
		</dict>
		<key>value-number</key>
		<dict>
			<key>match</key>
			<string>(?&lt;![\w.,])([-+]?((\d+[\d']*[.,]?[\d']*)|([.,]\d+[\d']*))((e|E)(\+|-)?\d+)?)(?=\W)</string>
			<key>name</key>
			<string>constant.numeric.red</string>
		</dict>
		<key>value-pair</key>
		<dict>
			<key>match</key>
			<string>(?&lt;!\w)[-+]?[[:digit:]]+[x][-+]?[[:digit:]]+</string>
			<key>name</key>
			<string>constant.other.pair.red</string>
		</dict>
		<key>value-time</key>
		<dict>
			<key>match</key>
			<string>([-+]?[:]\d{1,2}([aApP][mM])?)|([-+]?[:]\d{1,2}[.]\d{0,9})|([-+]?\d{1,2}[:]\d{1,2}([aApP][mM])?)|([-+]?\d{1,2}[:]\d{1,2}[.]\d{0,9})|([-+]?\d{1,2}[:]\d{1,2}[:]\d{1,2}([.]\d{0,9})?([aApP][mM])?)(?!\w)</string>
			<key>name</key>
			<string>constant.other.time.red</string>
		</dict>
		<key>value-tuple</key>
		<dict>
			<key>match</key>
			<string>(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){2,9}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.?</string>
			<key>name</key>
			<string>constant.other.tuple.red</string>
		</dict>
		<key>values</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#value-date</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#value-time</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#value-tuple</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#value-number</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#value-pair</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#value-money</string>
				</dict>
			</array>
		</dict>
		<key>word-datatype</key>
		<dict>
			<key>match</key>
			<string>(?&lt;=^|[\s\[\]()}"/])[A-Za-z=\-\?\!\_\*\+\.`~\&amp;][A-Za-z0-9=\-\!\?\_\*\+\.`~\&amp;]*(/([A-Za-z=\-\?\!\_\*\+\.`~][A-Za-z0-9=\-\!\?\_\*\+\.`~]*|\d+))*\!</string>
			<key>name</key>
			<string>keyword.control.datatype.red</string>
		</dict>
		<key>word-get</key>
		<dict>
			<key>match</key>
			<string>:[A-Za-z=\-\?\!\_\*\+\.`~\&amp;][A-Za-z0-9=\-\!\?\_\*\+\.`~&amp;]*(/([A-Za-z=\-\?\!\_\*\+\.`~\&amp;][A-Za-z0-9=\-\!\?\_\*\+\.`~&amp;]*|\d+)*)*</string>
			<key>name</key>
			<string>variable.other.getword.red</string>
		</dict>
		<key>word-header</key>
		<dict>
			<key>match</key>
			<string>(?&lt;=^\[|^)(Red|Red(/System)?)(?=\s*\[)</string>
			<key>name</key>
			<string>keyword.control.header.red</string>
		</dict>
		<key>word-infix</key>
		<dict>
			<key>match</key>
			<string>(?&lt;=^|[\s\[\]()}"])(\+\+?|--?|\*\*?|//?|=|&gt;=?|&lt;(=|&gt;)?)(?=[\s\[\](){"])</string>
			<key>name</key>
			<string>keyword.control.native.red</string>
		</dict>
		<key>word-lit</key>
		<dict>
			<key>match</key>
			<string>(?&lt;=^|[\s\[\]()}"/])'[A-Za-z=\-\?\!\_\*\+\.`~\&amp;][A-Za-z0-9=\-\!\?\_\*\+\.`~\&amp;]*(/([A-Za-z=\-\?\!\_\*\+\.`~][A-Za-z0-9=\-\!\?\_\*\+\.`~]*|\d+))*</string>
			<key>name</key>
			<string>constant.other.litword.red</string>
		</dict>
		<key>word-logic</key>
		<dict>
			<key>match</key>
			<string>(?&lt;=^|[\s\[\]()}"])(true|yes|false|off|none|no)(?=[\s\[\](){"])</string>
			<key>name</key>
			<string>constant.other.logic.red</string>
		</dict>
		<key>word-native</key>
		<dict>
			<key>match</key>
			<string>(?&lt;=^|[\s\[\]()}"])(about|abs|absolute|action\?|add|alert|alias|all|alter|and~|and|any|any-block\?|any-function\?|any-string\?|any-type\?|any-word\?|append|arccosine|arcsine|arctangent|array|ask|at|back|binary\?|bind|bitset\?|block\?|body-of|boot-prefs|break|browse|build-tag|call|caret-to-offset|case|catch|center-face|change|change-dir|char\?|charset|checksum|choose|clean-path|clear|clear-fields|close|closure|collect|comment|complement|compose|compress|confine|confirm|connected\?|context|continue-post|copy|cosine|cp|crypt-strength\?|cvs-date|cvs-version|datatype\?|date\?|debase|decimal\?|decode-cgi|decode-url|decompress|deflag-face|dehex|delete|demo|desktop|detab|dh-compute-key|dh-generate-key|dh-make-key|difference|dir\?|dirize|disarm|dispatch|divide|do|do-boot|do-events|do-face|do-face-alt|does|dsa-generate-key|dsa-make-key|dsa-make-signature|dsa-verify-signature|dump-face|dump-pane|echo|editor|either|else|email\?|emailer|empty\?|enbase|entab|equal\?|error\?|even\?|event\?|exclude|exists-thru\?|exists\?|exit|exp|extract|fifth|file\?|find|find-key-face|find-window|first|flag-face|flag-face\?|flash|focus|for|forall|foreach|forever|form|forskip|found\?|fourth|free|func|function\??|get|get-env|get-modes|get-net-info|get-style|get-word\?|greater-or-equal\?|greater\?|halt|has|hash\?|head\??|help|hide|hide-popup|if|image\?|import-email|in|in-window\?|index\?|info\?|inform|input|input\?|insert|insert-event-func|inside\?|integer\?|intersect|issue\?|join|keep|last|launch|launch-thru|layout|length\?|lesser-or-equal\?|lesser\?|library\?|link-app\?|link\?|list-dir|list\?|lit-path\?|lit-word\?|load|load-image|load-prefs|load-thru|log-10|log-2|log-e|logic\?|loop|lowercase|make|make-dir|make-face|max|maximum|maximum-of|min|minimum|minimum-of|modified\?|mold|money\?|multiply|native\?|negate|negative\?|net-error|next|none\?|not|not-equal\?|now|number\?|object\?|odd\?|offset-to-caret|offset\?|op\?|open|open-events|or|or~|outside\?|pair\?|paren\?|parse|parse-email-addrs|parse-header|parse-header-date|parse-xml|path-thru|path\?|pick|poke|port\?|positive\?|power|prin|print|probe|protect|protect-system|q|query|quit|random|read|read-io|read-net|read-thru|reboot|recycle|reduce|refinement\?|reform|rejoin|remainder|remold|remove|remove-event-func|rename|repeat|repend|replace|request|request-color|request-date|request-download|request-file|request-list|request-pass|request-text|resend|return|reverse|routine\??|rsa-encrypt|rsa-generate-key|rsa-make-key|same\?|save|save-prefs|save-user|screen-offset\?|script\?|scroll-para|second|secure|select|send|series\?|set|set-env|set-font|set-modes|set-net|set-para|set-path\?|set-style|set-user|set-user-name|set-word\?|show|show-popup|sine|size-text|size\?|skip|sort|source|span\?|spec-of|split-path|square-root|strict-equal\?|strict-not-equal\?|string\?|struct\?|stylize|subtract|switch|tag\?|tail\??|tangent|textinfo|third|throw|throw-on-error|time\?|title-of|to|to-local-file|to-red-file|trace|trim|try|tuple\?|types-of|type\?|unfocus|uninstall|union|unique|unless|unprotect|unset|unset\?|until|unview|update|upgrade|uppercase|url\?|usage|use|values-of|value\?|vbug|view|view-install|view-prefs|view\?|viewed\?|wait|what|what-dir|while|win-offset\?|within\?|words-of|word\?|write|write-io|write-user|xor|xor~|zero\?|/local|thru|end)(/(?=[A-Za-z=\-\?\!\_\*\+\.`~\&amp;])|(?=[\s\[\](){"]|$))</string>
			<key>name</key>
			<string>keyword.control.native.red</string>
		</dict>
		<key>word-native-to-type</key>
		<dict>
			<key>match</key>
			<string>(?&lt;=^|[\s\[\]()}"])(to-binary|to-bitset|to-block|to-char|to-date|to-decimal|to-email|to-event|to-file|to-get-word|to-hash|to-hex|to-idate|to-image|to-integer|to-issue|to-list|to-lit-path|to-lit-word|to-logic|to-money|to-none|to-pair|to-paren|to-path|to-refinement|to-set-path|to-set-word|to-string|to-tag|to-time|to-tuple|to-url|to-word)(?=[\s\[\](){"]|$)</string>
			<key>name</key>
			<string>constant.other.word.to-type.red</string>
		</dict>
		<key>word-parse</key>
		<dict>
			<key>match</key>
			<string>(?&lt;=^|[\s\[\]()}"])(thru|some|opt|end)(?=[\s\[\](){"]|$)</string>
			<key>name</key>
			<string>keyword.control.parse.red</string>
		</dict>
		<key>word-qm</key>
		<dict>
			<key>match</key>
			<string>(?&lt;=^|[\s\[\]()}"])(qm|route|render|redirect-to|publish|response|as|validate|verify|get-param|get-cookie|set-cookie|require)(/(?=[A-Za-z=\-\?\!\_\*\+\.`~\&amp;])|(?=[\s\[\](){"]))</string>
			<key>name</key>
			<string>keyword.control.qm.red</string>
		</dict>
		<key>word-refine</key>
		<dict>
			<key>match</key>
			<string>/[A-Za-z=`~][A-Za-z0-9=\-\!\?\_\*\.`~]*</string>
			<key>name</key>
			<string>constant.other.word.refinement.red</string>
		</dict>
		<key>words</key>
		<dict>
			<key>name</key>
			<string>meta.word.red</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#word-datatype</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#word-get</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#word-lit</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#word-header</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#word-native</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#word-native-to-type</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#word-infix</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#word-logic</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#word-refine</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#word-qm</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#word</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.red</string>
	<key>uuid</key>
	<string>6BE0E13B-C4DD-478F-953A-2D84DBBCA2BA</string>
</dict>
</plist>
